// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// icd10cmCompare
bool icd10cmCompare(const Rcpp::String x, const Rcpp::String y);
RcppExport SEXP _icd_data_icd10cmCompare(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::String >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Rcpp::String >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(icd10cmCompare(x, y));
    return rcpp_result_gen;
END_RCPP
}
// icd10cmSort
CharacterVector icd10cmSort(const CharacterVector& x);
RcppExport SEXP _icd_data_icd10cmSort(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const CharacterVector& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(icd10cmSort(x));
    return rcpp_result_gen;
END_RCPP
}
// icd10cmOrder
IntegerVector icd10cmOrder(const CharacterVector& x);
RcppExport SEXP _icd_data_icd10cmOrder(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const CharacterVector& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(icd10cmOrder(x));
    return rcpp_result_gen;
END_RCPP
}
// icd9Compare
bool icd9Compare(std::string a, std::string b);
RcppExport SEXP _icd_data_icd9Compare(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type a(aSEXP);
    Rcpp::traits::input_parameter< std::string >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(icd9Compare(a, b));
    return rcpp_result_gen;
END_RCPP
}
// icd9Order
std::vector<std::size_t> icd9Order(std::vector<std::string> x);
RcppExport SEXP _icd_data_icd9Order(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(icd9Order(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_icd_data_icd10cmCompare", (DL_FUNC) &_icd_data_icd10cmCompare, 2},
    {"_icd_data_icd10cmSort", (DL_FUNC) &_icd_data_icd10cmSort, 1},
    {"_icd_data_icd10cmOrder", (DL_FUNC) &_icd_data_icd10cmOrder, 1},
    {"_icd_data_icd9Compare", (DL_FUNC) &_icd_data_icd9Compare, 2},
    {"_icd_data_icd9Order", (DL_FUNC) &_icd_data_icd9Order, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_icd_data(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
